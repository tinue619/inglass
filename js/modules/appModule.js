// –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const AppModule = {
    // –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    showMainApp() {
        console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', DataManager.getCurrentUser().name);
        
        const app = document.getElementById('app');
        if (!app) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç app –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        try {
            const currentUser = DataManager.getCurrentUser();
            
            app.innerHTML = `
                <div id="mainApp" style="display: block;">
                    <header class="header">
                        <div class="header-logo">
                            <img src="assets/logo.svg" alt="Logo" onerror="this.src='assets/logo-placeholder.svg'">
                            <img src="assets/name.svg" alt="Company Name" onerror="this.src='assets/name-placeholder.svg'" style="height: 24px;">
                        </div>
                        <div class="header-actions">
                            <div class="sync-status" id="syncStatus">
                                <button class="btn btn-secondary btn-small" onclick="APIService.forceSync()" title="–†—É—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è">
                                    üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
                                </button>
                            </div>
                            <div class="user-info">
                                <span>üë§ ${currentUser.name}</span>
                            </div>
                            ${currentUser.isAdmin ? 
                            `<button class="btn btn-secondary btn-small" onclick="AdminModule.showAdminPanel()">
                            –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
                            </button>` : ''
                        }
                            <button class="btn btn-secondary btn-small" onclick="BoardModule.showProcessBoard()">
                                –ü—Ä–æ—Ü–µ—Å—Å—ã
                            </button>
                            <button class="btn btn-danger btn-small" onclick="AuthModule.logout()">
                                –í—ã–π—Ç–∏
                            </button>
                        </div>
                    </header>
                    <main id="mainContent">
                        <div style="padding: 20px;">
                            <h3>–ó–∞–≥—Ä—É–∑–∫–∞...</h3>
                        </div>
                    </main>
                </div>
            `;
            
            // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            setTimeout(() => {
                try {
                    BoardModule.showProcessBoard();
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –¥–æ—Å–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:', error);
                    document.getElementById('mainContent').innerHTML = `
                        <div style="padding: 20px;">
                            <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤</h3>
                            <p>${error.message}</p>
                            <button onclick="BoardModule.showProcessBoard()">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
                        </div>
                    `;
                }
            }, 100);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error);
            app.innerHTML = `
                <div style="padding: 20px; color: red;">
                    <h2>–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</h2>
                    <p>${error.message}</p>
                    <button onclick="AuthModule.logout()">–í—ã–π—Ç–∏</button>
                </div>
            `;
        }
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    async init() {
        console.log('App started');
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –∏–∑ –∫—ç—à–∞)
            await DataManager.load();
            
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (DataManager.loadCurrentUser()) {
                console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
                this.showMainApp();
            } else {
                console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞');
                AuthModule.showLoginScreen();
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
            document.getElementById('app').innerHTML = `
                <div style="padding: 20px; color: red;">
                    <h2>–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞</h2>
                    <p>${error.message}</p>
                    <button onclick="location.reload()">–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
                </div>
            `;
        }
    },

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ–∫–Ω–∞
    initWindowEvents() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window.addEventListener('resize', () => {
            try {
                if (document.getElementById('processBoard')) {
                    BoardModule.renderProcessBoard();
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞:', error);
            }
        });

        // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞
        window.addEventListener('beforeunload', () => {
            try {
                DataManager.save();
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', error);
            }
        });
    }
};

window.AppModule = AppModule;

// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å legacy –∫–æ–¥–æ–º
window.showMainApp = () => AppModule.showMainApp();
