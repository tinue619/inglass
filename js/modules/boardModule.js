// –ü—Ä–æ—Å—Ç–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è BoardModule –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É BoardModule...');

const BoardModule = {
    // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test() {
        console.log('‚úÖ BoardModule.test() —Ä–∞–±–æ—Ç–∞–µ—Ç!');
        return 'BoardModule —Ä–∞–±–æ—Ç–∞–µ—Ç';
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    showProcessBoard() {
        console.log('üìã BoardModule.showProcessBoard() –≤—ã–∑–≤–∞–Ω–∞');
        
        const mainContent = document.getElementById('mainContent');
        if (!mainContent) {
            console.error('‚ùå mainContent –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
            const orders = DataManager.getOrders();
            const processes = DataManager.getProcesses();
            const products = DataManager.getProducts();
            
            console.log(`üìä –î–∞–Ω–Ω—ã–µ: –ø—Ä–æ—Ü–µ—Å—Å–æ–≤=${processes.length}, –∑–∞–∫–∞–∑–æ–≤=${orders.length}, –∏–∑–¥–µ–ª–∏–π=${products.length}`);
            
            if (!orders || !processes || !products) {
                mainContent.innerHTML = `
                    <div class="board-container" style="padding: 40px; text-align: center;">
                        <div style="font-size: 24px; margin-bottom: 10px;">üîÑ</div>
                        <div>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
                        <div style="margin-top: 10px; font-size: 12px; color: #666;">
                            –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º...
                        </div>
                    </div>
                `;
                return;
            }

            const user = DataManager.getCurrentUser();
            if (!user) {
                console.error('‚ùå –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return;
            }

            const canCreate = user.isAdmin || user.canCreateOrders;
            
            // –ü—Ä–æ—Å—Ç–∞—è –¥–æ—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            mainContent.innerHTML = `
                <div class="board-container">
                    ${canCreate ? `
                        <div class="board-header" style="padding: 20px; background: #f8f9fa; margin-bottom: 20px;">
                            <button class="btn btn-primary" onclick="alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')">
                                –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑
                            </button>
                            <div class="board-stats" style="margin-top: 10px;">
                                <span>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${orders.length}</span>
                                <span style="margin-left: 20px;">–í —Ä–∞–±–æ—Ç–µ: ${orders.filter(o => o.currentProcessId).length}</span>
                                <span style="margin-left: 20px;">–ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${orders.filter(o => !o.currentProcessId).length}</span>
                            </div>
                        </div>
                    ` : ''}
                    <div class="process-board" style="padding: 20px;">
                        <h3>üèóÔ∏è –î–æ—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)</h3>
                        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <strong>${user.name}</strong> ${user.isAdmin ? '(–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)' : ''}</p>
                        <p>–ü—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: <strong>${processes.length}</strong></p>
                        <p>–ó–∞–∫–∞–∑–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: <strong>${orders.length}</strong></p>
                        <p>–ò–∑–¥–µ–ª–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: <strong>${products.length}</strong></p>
                        
                        ${processes.length > 0 ? `
                            <div style="margin-top: 30px;">
                                <h4>–ü—Ä–æ—Ü–µ—Å—Å—ã:</h4>
                                <ul>
                                    ${processes.map(p => `<li>${p.name} (ID: ${p.id})</li>`).join('')}
                                </ul>
                            </div>
                        ` : `
                            <div style="margin-top: 30px; padding: 20px; background: #fff3cd; border-radius: 5px;">
                                <p><strong>‚ö†Ô∏è –ù–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤</strong></p>
                                <p>–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –¥–æ—Å–∫–∏.</p>
                            </div>
                        `}
                        
                        ${orders.length > 0 ? `
                            <div style="margin-top: 30px;">
                                <h4>–ó–∞–∫–∞–∑—ã:</h4>
                                <ul>
                                    ${orders.slice(0, 5).map(o => `<li>‚Ññ${o.number} - ${o.customerName}</li>`).join('')}
                                    ${orders.length > 5 ? `<li>... –∏ –µ—â–µ ${orders.length - 5} –∑–∞–∫–∞–∑–æ–≤</li>` : ''}
                                </ul>
                            </div>
                        ` : `
                            <div style="margin-top: 30px; padding: 20px; background: #d1ecf1; border-radius: 5px;">
                                <p><strong>üìã –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤</strong></p>
                                <p>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.</p>
                            </div>
                        `}
                        
                        <div style="margin-top: 30px; padding: 15px; background: #f1f3f4; border-radius: 5px; font-size: 14px;">
                            <strong>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong> –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–æ—Å–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏. 
                            –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫.
                        </div>
                    </div>
                </div>
            `;
            
            console.log('‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –¥–æ—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ showProcessBoard:', error);
            mainContent.innerHTML = `
                <div style="padding: 20px; color: red; text-align: center;">
                    <h3>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤</h3>
                    <p>${error.message}</p>
                    <button onclick="location.reload()" style="margin-top: 15px; padding: 10px 15px;">
                        –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    </button>
                </div>
            `;
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    showOrderDetails(orderId) {
        console.log('üìÑ showOrderDetails –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞:', orderId);
        alert(`–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ ${orderId} (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)`);
    }
};

console.log('‚úÖ BoardModule –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ window...');
window.BoardModule = BoardModule;
console.log('üéâ BoardModule —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
if (typeof window.BoardModule !== 'undefined') {
    console.log('‚úÖ window.BoardModule –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('‚úÖ BoardModule.showProcessBoard:', typeof BoardModule.showProcessBoard);
} else {
    console.error('‚ùå window.BoardModule –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ —ç–∫—Å–ø–æ—Ä—Ç–∞!');
}
