// –û–¢–õ–ê–î–û–ß–ù–ê–Ø –í–ï–†–°–ò–Ø –§–£–ù–ö–¶–ò–ô –ë–†–ê–ö–ê

console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É board_defect.js...');

// –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
window.testDefectFunction = function() {
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    alert('–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
};

// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –±—Ä–∞–∫
window.showDefectModal = function(orderId) {
    console.log('üéØ showDefectModal –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞:', orderId);
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ - –∏—â–µ–º data –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        let appData = null;
        if (window.data) {
            appData = window.data;
        } else if (typeof data !== 'undefined') {
            appData = data;
        } else {
            alert('‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.');
            console.error('–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. window.data:', typeof window.data, 'data:', typeof data);
            return;
        }
        
        const order = appData.orders.find(o => o.id === orderId);
        if (!order) {
            alert('‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω —Å ID: ' + orderId);
            return;
        }
        
        console.log('üìã –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑:', order);
        
        const product = appData.products.find(p => p.id === order.productId);
        if (!product) {
            alert('‚ùå –ò–∑–¥–µ–ª–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–∞');
            return;
        }
        
        console.log('üî® –ù–∞–π–¥–µ–Ω–æ –∏–∑–¥–µ–ª–∏–µ:', product);
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        const availableProcesses = product.processes
            .filter(processId => processId !== order.currentProcessId)
            .map(processId => appData.processes.find(p => p.id === processId))
            .filter(process => process)
            .sort((a, b) => a.order - b.order);
        
        console.log('‚öôÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –±—Ä–∞–∫–∞:', availableProcesses);
        
        if (availableProcesses.length === 0) {
            alert('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –±—Ä–∞–∫');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è showModal
        if (typeof window.showModal !== 'function' && typeof showModal !== 'function') {
            alert('‚ùå –§—É–Ω–∫—Ü–∏—è showModal –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π prompt...');
            
            // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
            const reason = prompt('–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å –∑–∞–∫–∞–∑–æ–º:');
            if (!reason) {
                alert('–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
                return;
            }
            
            const processNames = availableProcesses.map((p, i) => `${i + 1}. ${p.name}`).join('\n');
            const processChoice = prompt(`–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–∞–ø –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä):\n${processNames}`);
            
            const processIndex = parseInt(processChoice) - 1;
            if (processIndex < 0 || processIndex >= availableProcesses.length) {
                alert('–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —ç—Ç–∞–ø–∞');
                return;
            }
            
            const targetProcess = availableProcesses[processIndex];
            
            // –í—ã–∑—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ –±—Ä–∞–∫
            window.sendOrderToDefectSimple(orderId, targetProcess.id, reason, appData);
            return;
        }
        
        // –ï—Å–ª–∏ showModal –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        const currentProcess = appData.processes.find(p => p.id === order.currentProcessId);
        
        const form = `
            <div style="margin-bottom: 16px; padding: 12px; background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px;">
                <strong>‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –±—Ä–∞–∫</strong><br>
                <small>–ó–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç—Ç–∞–ø –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã</small>
            </div>
            <div style="margin-bottom: 16px;">
                <label style="display: block; margin-bottom: 4px; font-weight: bold;">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:</label>
                <textarea id="defect-reason" style="width: 100%; height: 80px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω–µ —Ç–∞–∫ —Å –∑–∞–∫–∞–∑–æ–º..."></textarea>
            </div>
            <div style="margin-bottom: 16px;">
                <label style="display: block; margin-bottom: 4px; font-weight: bold;">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —ç—Ç–∞–ø:</label>
                <select id="defect-process" style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–∞–ø...</option>
                    ${availableProcesses.map(process => 
                        `<option value="${process.id}">${process.name}</option>`
                    ).join('')}
                </select>
                <small style="color: #666; margin-top: 4px; display: block;">
                    üí° –ó–∞–∫–∞–∑ –≤–µ—Ä–Ω–µ—Ç—Å—è –Ω–∞ —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø "${currentProcess ? currentProcess.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}" –ø–æ—Å–ª–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è
                </small>
            </div>
        `;
        
        console.log('üé® –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ...');
        
        const modalFunction = window.showModal || showModal;
        modalFunction('–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –±—Ä–∞–∫', form, () => {
            const reason = document.getElementById('defect-reason').value.trim();
            const targetProcessId = parseInt(document.getElementById('defect-process').value);
            
            console.log('üíæ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', { reason, targetProcessId });
            
            if (!reason) {
                alert('–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å –∑–∞–∫–∞–∑–æ–º');
                return false;
            }
            
            if (!targetProcessId) {
                alert('–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–∞–ø –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
                return false;
            }
            
            window.sendOrderToDefectSimple(orderId, targetProcessId, reason, appData);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å–∫—É –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
            if (typeof renderProcessBoard === 'function') {
                renderProcessBoard();
            }
            
            return true;
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ showDefectModal:', error);
        alert('–û—à–∏–±–∫–∞: ' + error.message);
    }
};

// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –±—Ä–∞–∫
window.sendOrderToDefectSimple = function(orderId, targetProcessId, reason, appData = null) {
    console.log('üì§ sendOrderToDefectSimple –≤—ã–∑–≤–∞–Ω–∞:', { orderId, targetProcessId, reason });
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        if (!appData) {
            if (window.data) {
                appData = window.data;
            } else if (typeof data !== 'undefined') {
                appData = data;
            } else {
                alert('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                return;
            }
        }
        const order = appData.orders.find(o => o.id === orderId);
        if (!order) {
            alert('–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        const currentProcess = appData.processes.find(p => p.id === order.currentProcessId);
        const targetProcess = appData.processes.find(p => p.id === targetProcessId);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞–∫–µ
        if (!order.defectInfo) {
            order.defectInfo = {};
        }
        
        order.defectInfo.originalProcessId = order.currentProcessId;
        order.defectInfo.isDefective = true;
        order.defectInfo.defectReason = reason;
        order.defectInfo.defectDate = new Date().toISOString();
        order.defectInfo.defectUser = appData.currentUser ? appData.currentUser.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        order.defectInfo.defectFromProcess = currentProcess ? currentProcess.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        
        // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —ç—Ç–∞–ø
        order.currentProcessId = targetProcessId;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
        if (typeof addOrderHistoryEvent === 'function') {
            addOrderHistoryEvent(orderId, 'defect_sent', {
                currentUser: appData.currentUser,
                fromProcess: currentProcess ? { id: currentProcess.id, name: currentProcess.name } : null,
                toProcess: targetProcess ? { id: targetProcess.id, name: targetProcess.name } : null,
                reason: reason
            });
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
        if (typeof saveData === 'function') {
            saveData();
        }
        
        console.log('‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±—Ä–∞–∫:', order);
        alert(`‚úÖ –ó–∞–∫–∞–∑ ‚Ññ${order.number} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±—Ä–∞–∫ –Ω–∞ —ç—Ç–∞–ø "${targetProcess ? targetProcess.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}" –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã.`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ sendOrderToDefectSimple:', error);
        alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –±—Ä–∞–∫: ' + error.message);
    }
};

console.log('‚úÖ board_defect.js –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—Ä–∞–∫–∞:', {
    showDefectModal: typeof window.showDefectModal,
    sendOrderToDefectSimple: typeof window.sendOrderToDefectSimple,
    testDefectFunction: typeof window.testDefectFunction
});

// –¢–µ—Å—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
setTimeout(() => {
    console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...');
    console.log('Data –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ window.data:', !!window.data);
    console.log('Data –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–∞–∫ data:', typeof data !== 'undefined');
    console.log('showModal –¥–æ—Å—Ç—É–ø–Ω–∞:', typeof window.showModal, typeof showModal);
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ
    let foundData = null;
    if (window.data) {
        foundData = 'window.data';
    } else if (typeof data !== 'undefined') {
        foundData = 'data';
    }
    console.log('üîç –î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã –≤:', foundData);
}, 2000);
